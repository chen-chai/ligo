// ligo项目 gradle 主构建脚本
// 作者：zhiya.chai  peng.chen
// 时间：2016-08-28

buildscript {
    repositories {
        maven {
            url :"http://repo1.maven.org/maven2/"
        }
    }
}
plugins {
    id 'java'
    //id 'net.researchgate.release' version '2.4.0'
    id 'eclipse'
}
// 构建的目标环境定义
final PROFILE_DEV  = 'dev'
final PROFILE_TEST = 'test'
final PROFILE_QA   = 'qa'
final PROFILE_GRAY = 'gray'
final PROFILE_PROD = 'pro'
final PROFILE_PROPERTY = "deploy.profile"

ext {
    // 构建的目标环境，默认是本机开发环境
    profile = PROFILE_DEV
    if (project.hasProperty(PROFILE_PROPERTY)) {
        profile = project[PROFILE_PROPERTY]
    }
    println "target profile: $profile"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'

    apply from: "$rootDir/deploy.gradle"

    repositories {
        maven {
            url "http://nexus.cfaoe.com/nexus/content/groups/public/"
        }
        flatDir name: 'libs', dirs: "$rootProject.rootDir/libs"
    }

    sourceCompatibility = '1.7'
    targetCompatibility = '1.7'
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    dependencies {
        // log
        compile ('org.apache.logging.log4j:log4j-core:2.3')
        compile ('org.slf4j:slf4j-api:1.7.19')
        compile ('org.apache.logging.log4j:log4j-slf4j-impl:2.5')
        // spring
        compile ('org.springframework:spring-context:4.2.5.RELEASE')
        compile ('org.springframework:spring-web:4.2.5.RELEASE')
        // others
        compile ('com.alibaba:fastjson:1.1.26')
    }

    // 动态装载检查代码的插件，加快部署时编译速度
    if (profile == PROFILE_DEV) {
        apply plugin: 'findbugs'
        apply plugin: 'pmd'

        findbugs {
            ignoreFailures = true
            reportsDir = file("$buildDir/reports/findbugs")
            effort = "max"
        }

        pmd {
            ignoreFailures = true
            reportsDir = file("$buildDir/reports/pmd")
            ruleSets = [
            'java-basic',
            'java-codesize',
            'java-design',
            'java-imports',
            'java-empty',
            'java-optimizations',
            'java-strictexception',
            'java-strings',
            'java-typeresolution',
            'java-unnecessary',
            'java-unusedcode'
            ]
        }
    }
    // 实现分 profile 拷贝配置文件
    processResources {
        println "processResources using: $profile"
        if (profile != PROFILE_DEV) {
            from "sc/$profile"
        }
    }
}

//apply from: "$rootDir/release.gradle"

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
